{"version":3,"sources":["p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h8/HW8.tsx","p2-homeworks/h8/bll/redux/redux-store.ts","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css"],"names":["module","exports","initialPeople","id","name","age","sortAC","payload","type","SuperButton","dis","active","red","className","restProps","disabledButton","s","opacity","ActiveButton","finalClassName","default","disabled","HW8","useSelector","state","homeWorkReducer","dispatch","useDispatch","finalPeople","map","p","key","onClick","action","combineReducer","combineReducers","stateCopy","sort","a","b","filter","user","initState","u","store","createStore","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3cfb7fb2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__PsON-\"};","type sortType = {\n    type: 'SORT'\n    payload: 'up' | 'down'\n}\ntype checkType = {\n    type: 'CHECK'\n    payload: number\n}\ntype fullUsersType = {\n    type: 'FULL-USERS'\n}\n\ntype actionType =\n    | sortType\n    | checkType\n    | fullUsersType\n\nconst initialPeople: Array<initialPeopleType> = [\n    {id: 0, name: \"Кот\", age: 3},\n    {id: 1, name: \"Александр\", age: 66},\n    {id: 2, name: \"Коля\", age: 16},\n    {id: 3, name: \"Виктор\", age: 44},\n    {id: 4, name: \"Дмитрий\", age: 40},\n    {id: 5, name: \"Ирина\", age: 55},\n]\n\nexport type initialPeopleType = {\n    id: number\n    name: string\n    age: number\n}\nexport const homeWorkReducer = (state: Array<initialPeopleType> = initialPeople, action: actionType): Array<initialPeopleType> => {\n    switch (action.type) {\n        case \"SORT\": {\n\n            let stateCopy = [...state]\n            if (action.payload === 'up') {\n                stateCopy = state.sort((a, b) => (a.name < b.name) ? -1 : 0)\n            }\n            if (action.payload === 'down') {\n                stateCopy = state.sort((a, b) => (a.name > b.name) ? -1 : 0)\n            }\n\n            return [...stateCopy]\n        }\n        case \"CHECK\": {\n            debugger\n            let stateCopy = {...state}\n            if (action.payload === 18) {\n                stateCopy = state.filter(user => user.age >= 18)\n            }\n\n            return stateCopy\n        }\n        case \"FULL-USERS\": {\n            //Просто хотел вернуть все объекты =))))\n            const initState = [\n                {id: 0, name: \"Кот\", age: 3},\n                {id: 1, name: \"Александр\", age: 66},\n                {id: 2, name: \"Коля\", age: 16},\n                {id: 3, name: \"Виктор\", age: 44},\n                {id: 4, name: \"Дмитрий\", age: 40},\n                {id: 5, name: \"Ирина\", age: 55},\n            ]\n            return [\n                ...initState.map(u => u)\n            ]\n        }\n        default:\n            return state\n    }\n};\n\nexport const sortAC = (payload: 'up' | 'down'): sortType => {\n    return {type: \"SORT\", payload}\n}\nexport const checkAC = (payload: number): checkType => {\n    return {type: \"CHECK\", payload}\n}\nexport const fullUsersAC = ():fullUsersType => {\n    return {type: \"FULL-USERS\"}\n}\n\n\n\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n    dis?: boolean\n    active?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        dis,active,\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const disabledButton = `${!dis ? '' : s.opacity}`;\n    const ActiveButton = `${!active && s.opacity}`\n    const finalClassName = `${red ? s.red : s.default} ${className} ${disabledButton} ${ActiveButton}`;\n\n    return (\n        <button\n            className={finalClassName}\n            disabled={dis}\n\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React from \"react\";\nimport {checkAC, fullUsersAC, initialPeopleType, sortAC} from \"./bll/homeWorkReducer\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\ntype AppRootStateType = {\n    homeWorkReducer: Array<initialPeopleType>\n}\n\nfunction HW8() {\n    const initialPeople = useSelector<AppRootStateType, Array<initialPeopleType>>(state => state.homeWorkReducer)\n    const dispatch = useDispatch()\n\n    const finalPeople = initialPeople.map(p => (\n        <div key={p.id}>\n            {p.id}:{p.name}<span>{p.age}лет</span>\n        </div>\n    ))\n\n    const sortUp = () => {\n        const action = sortAC('up')\n        dispatch(action)\n    }\n    const sortDown = () => {\n        const action = sortAC('down')\n        dispatch(action)\n    }\n    const checkAge = () => {\n        const action = checkAC(18)\n        dispatch(action)\n    }\n    const fullUsers = () => {\n        const action = fullUsersAC()\n        dispatch(action)\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 8\n\n            {/*should work (должно работать)*/}\n\n            {finalPeople}\n            <div><SuperButton onClick={sortUp}>sort up</SuperButton></div>\n            <div><SuperButton onClick={sortDown}>sort down</SuperButton></div>\n            <div><SuperButton onClick={checkAge}>check 18</SuperButton></div>\n            <div><SuperButton onClick={fullUsers}>Full users</SuperButton></div>\n\n            check 18\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativePeople/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW8;\n","import {createStore, combineReducers} from \"redux\";\r\nimport {homeWorkReducer} from \"../homeWorkReducer\";\r\n\r\nconst combineReducer = combineReducers({\r\n    homeWorkReducer: homeWorkReducer\r\n})\r\n\r\nexport const store = createStore(combineReducer)","import React from \"react\";\nimport s from \"./App.module.css\";\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\nimport HW7 from \"../../../p2-homeworks/h7/HW7\";\nimport HW8 from \"../../../p2-homeworks/h8/HW8\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"../../../p2-homeworks/h8/bll/redux/redux-store\";\nimport HW9 from \"../../../p2-homeworks/h9/HW9\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            {/*<HW5/>*/}\n            {/*<HW6/>*/}\n            {/*<HW7/>*/}\n            <Provider store={store}>\n                <HW8/>\n            </Provider>\n            {/*<HW9/>*/}\n\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__14beZ\",\"opacity\":\"SuperButton_opacity__1reVy\",\"red\":\"SuperButton_red__2dRn4\"};"],"sourceRoot":""}